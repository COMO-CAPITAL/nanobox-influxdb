#!/usr/bin/env ruby

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift  '/opt/gonano/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

# Remove the IP if provided
if payload[:ips]

  execute "bring down vip" do
    command "/etc/nanoinit.d/eth00 stop"
    not_if { !File.exist?('/etc/nanoinit.d/eth00') }
  end

  execute "remove persistance" do
    command "rm -f /etc/nanoinit.d/eth00"
    not_if { !File.exist?('/etc/nanoinit.d/eth00') }
  end
end

# influxdb

service 'influxdb' do
  action :disable
  init :runit
  not_if { !Dir.exist?('/etc/service/influxdb') }
end

directory '/etc/service/influxdb' do
  action :delete
  not_if { !Dir.exist?('/etc/service/influxdb') }
end

# narc

service 'narc' do
  action :stop
  not_if { !Dir.exist?('/etc/service/narc') }
end

directory '/etc/service/narc' do
  action :delete
  not_if { !Dir.exist?('/etc/service/narc') }
end

# ssh

service 'ssh' do
  action :disable
  init :runit
  not_if { !Dir.exist?('/etc/service/ssh') }
end

directory '/etc/service/ssh' do
  action :delete
  not_if { !Dir.exist?('/etc/service/ssh') }
end

# cron

service 'cron' do
  action :disable
  not_if { !Dir.exist?('/etc/service/cron') }
end

directory '/etc/service/cron' do
  action :delete
  not_if { !Dir.exist?('/etc/service/cron') }
end
